#!/usr/bin/env python3
#Author David Boh // herrboh@gmail.com

# TO DO 
# Avoid file overwrite
# if user provides file extension (.py or .sh) make sure to delete .py part to avoid
# cases of files named file.py.py - user regexes to fix this. 
# include more flags for different types of python files, or use cases. 

import os, sys

try:
    filename = sys.argv[2]
    flag = sys.argv[1]
except:
    #Note: error type can make this piece of code work or not. 
    print("Please include params -s for sh, -p for python")
    #main function checks if the variable named 'flags' exists in global variables

def createpy():
    file_ext = ".py"
    with open("{}{}".format(filename,file_ext), "w") as file:
        file.write("#!/usr/bin/env python3\n")
        file.write("\n")
        file.write("def main():")
        file.write("\n\n")
        file.write("main()")

    final_name= "{}{}".format(filename,file_ext)
    os.chmod(final_name,0o755)
    print("File {} has been created".format(final_name))

def createbash():
    file_ext = ".sh"
    with open("{}{}".format(filename,file_ext), "w") as file:
        file.write("#!/bin/sh\n")
    final_name= "{}{}".format(filename,file_ext)
    os.chmod(final_name,0o755)
    print("File {} has been created".format(final_name))
    file.close()
    
def creation():
    """this script creates a .py or .sh file based on flags passed when exec    uted (-p or -s).Each file will be created with execute permissions and inside of each file, the first line wille include a shebang #! line argument"""
    
    file_ext = ""

    if flag == '-p':
        createpy()
    elif flag == '-s':
        createbash()
    else:
        print("Invalid Input")

def main():
    if 'flag' and 'filename' in globals(): 
        creation()
    else:
        print("",end='')

main()
